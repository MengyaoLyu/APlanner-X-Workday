[["CS 1110", "Introduction to Computing Using Python", "Programming and problem solving using Python. Emphasizes principles of software development, style, and testing. Topics include procedures and functions, iteration, recusion, arrays and vectors, strings, an operational model of procedure and function calls, algorithms, exceptions, object-oriented programming, and GUIs (graphical user interfaces). Weekly labs provide guided practice on the computer, with staff present to help. Assignments use graphics and GUIs to help develop fluency and understanding.", "fall,spring,summer", "general", "", "", "", "4"], ["CS 1112", "Introduction to Computing Using MATLAB", "Programming and problem solving using MATLAB. Emphasizes the systematic development of algorithms and programs. Topics include iteration, functions, arrays, recursion, object-oriented programming, and MATLAB graphics. Assignments are designed to build an appreciation for complexity, dimension, fuzzy data, inexact arithmetic, randomness, simulation, and the role of approximation.", "fall,spring", "general", "", "", "", "4"], ["CS 1132", "Short Course in MATLAB", "Introduction to the MATLAB programming language. Covers the basic programming constructs of MATLAB, including assignment, conditionals, iteration, functions, arrays, vectorized computation, and scientific graphics. Designed for students who need MATLAB for research or other courses. Does not assume any previous programming experience.", "fall,spring", "general", "", "", "", "2"], ["CS 1133", "Short Course in Python", "Introduction to the Python programming language. Covers the basic programming constructs of Python, including assignment, conditionals, iteration, functions, object-oriented design, arrays, and vectorized computation. Designed for students who need Python for research or other courses. Does not assume any previous programming experience.", "fall,spring", "general", "", "", "", "2"], ["CS 1300", "Introductory Design and Programming for the Web", "The World Wide Web is both a technology and a pervasive and powerful resource in our society and culture. To build functional and effective web sites, students need technical and design skills as well as analytical skills for understanding who is using the web, in what ways they are using it, and for what purposes. In this course, students develop skills in all three of these areas through the use of technologies such as XHTML, Cascading Stylesheets, and PHP. Students study how web sites are deployed and used, usability issues on the web, user-centered design, and methods for visual layout and information architecture. Through the web, this course provides an introduction to the interdisciplinary field of information science.", "fall", "general", "", "", "", "3"], ["CS 1620", "Visual Imaging in the Electronic Age", "Interdisciplinary survey course designed to introduce students in the creative arts, science, and engineering to the concepts of 2D and 3D digital pictorial representation and display. It is a concept course that concentrates on \"why\" rather than \"how.\" Topics include perspective representations, display technology, how television works, bandwidth concepts, digital photography, computer graphics modeling and rendering, color perception, 3D data acquisition, volumetric imaging, and historical precedents, primarily from the art world.", "fall", "general", "", "", "", "4"], ["CS 1998", "Freshmen and Nontechnical Team Projects", "Freshmen and Nontechnical Team Projects.", "fall,spring", "general", "", "", "", "1"], ["CS 2024", "C++ Programming", "An intermediate introduction to the C++ programming language and the C/C++ standard libraries. Topics include basic statements, declarations, and types; stream I/O; user-defined classes and types; derived classes, inheritance, and object-oriented programming; exceptions and templates. Recommended for students who plan to take advanced courses in computer science that require familiarity with C++ or C.", "fall", "general", "", "", "", "2"], ["CS 2048", "Introduction to iPhone Development", "This course covers the basics of application development for the iPhone. No prior knowledge of iOS development is required, but familiarity with object-oriented programming is assumed. Topics taught include Xcode, Storyboard, Objective-C, Swift and UIKit including UITableView._Although no physical iPhone is needed, since the course is taught using the simulators that come with Xcode, every student is expected to come to each of the four sessions with a MacBook running OSX 10.9 or higher with Xcode installed in advance of the first lecture.", "fall", "general", "cs 2110,cs 2112", "", "", "1"], ["CS 2110", "Object-Oriented Programming and Data Structures", "Intermediate programming in a high-level language and introduction to computer science. Topics include program structure and organization, object-oriented programming (classes, objects, types, sub-typing), graphical user interfaces, algorithm analysis (asymptotic complexity, big \"O\" notation), recursion, data structures (lists, trees, stacks, queues, heaps, search trees, hash tables, graphs), graph algorithms. Java is the principal programming language.", "fall,spring,summer", "general", "cs 1110,cs 1112,cs 1114,cs 1115", "", "", "3"], ["CS 2111", "Programming Practicum", "Meets weekly for one hour, in collaboration with CS 2110. Designed to enhance understanding of object-oriented programming, use of the application for writing Java programs, and other programming issues, as well as theoretical concepts that arise in CS 2110. The hour is spent in ways appropriate to the material under study -lecture, question-answer session, problem solving in small groups, one-on-one help, etc.", "fall,spring", "general", "", "", "", "1"], ["CS 2112", "Object-Oriented Design and Data Structures - Honors", "Honors version of CS 2110/ENGRD 2110; credit is given for only one of CS 2110_and 2112. Corrective transfer between CS 2110_and 2112 (in either direction) is encouraged during first three weeks. Intermediate software design and introduction to key computer science ideas. Topics are similar to those in CS 2110_but are covered in greater depth, with more challenging assignments. Topics include object-oriented programming, program structure and organization, program reasoning using specifications and invariants, recursion, design patterns, concurrent programming, graphical user interfaces, data structures as in CS 2110, sorting and graph algorithms, asymptotic complexity, and simple algorithm analysis. Java is the principal programming language.", "fall", "core", "cs 1110", "", "", "4"], ["CS 2800", "Discrete Structures", "Covers the mathematics that underlies most of computer science. Topics include mathematical induction; logical proof; propositional and predicate calculus; combinatorics and discrete mathematics; some basic elements of basic probability theory; basic number theory; sets, functions, and relations; graphs; and finite-state machines. These topics are discussed in the context of applications to many areas of computer science, such as the RSA cryptosystem and web searching.", "fall,spring", "core", "", "", "", "3"], ["CS 2850", "Networks", "This interdisciplinary course examines network structures and how they matter in everyday life. The course examines how each of the computing, economic, sociological and natural worlds are connected and how the structure of these connections affects each of these worlds. Tools of graph theory and game theory are taught and then used to analyze networks. Topics covered include the web, the small world phenomenon, markets, neural networks, contagion, search and the evolution of networks.", "fall", "computer graphics", "", "", "", "4"], ["CS 3110", "Data Structures and Functional Programming", "Advanced programming course that emphasizes functional programming techniques and data structures. Programming topics include recursive and higher-order procedures, models of programming language evaluation and compilation, type systems, and polymorphism. Data structures and algorithms covered include graph algorithms, balanced trees, memory heaps, and garbage collection. Also covers techniques for analyzing program performance and correctness.", "fall,spring", "database", "cs 2110", "cs 3410,cs 3420", "", "4"], ["CS 3410", "Computer System Organization and Programming", "Introduction to computer organization, systems programming and the hardware/ software interface. Topics include instruction sets, computer arithmetic, datapath design, data formats, addressing modes, memory hierarchies including caches and virtual memory, I/O devices, bus-based I/O systems, and multicore architectures. Students learn assembly language programming and design a pipelined RISC processor.", "fall,spring", "core", "cs 2110;cs 2024", "cs 3110", "", "4"], ["CS 4090", "Teaching Experience in Computer Science", "Earn course credit for working as a consultant or ugrad TA in a computer science course.", "fall,spring", "core", "", "", "", "1"], ["CS 4154", "Analytics-driven Game Design", "A project-based course in which programmers and designers collaborate to design, biuld, and release a video game online through popular game portals. Students instrument their games to gather anonymous usage statistics from players and analyze this data to improve their game over multiple iterations. Technical aspects of this course include game mechanics, telemetry, A/B testing, and statistical analysis.", "fall", "general", "cs 2110", "", "Computer Gameification", "3"], ["CS 4210", "Numerical Analysis and Differential Equations", "Introduction to the fundamentals of numerical analysis: error analysis, approximation, interpolation, numerical integration. In the second half of the course, the above are used to build approximate solvers for ordinary and partial differential equations. Strong emphasis is placed on understanding the advantages, disadvantages, and limits of applicability for all the covered techniques. Computer programming is required to test the theoretical concepts throughout the course.", "fall", "general", "", "", "", "4"], ["CS 4320", "Introduction to Database Systems", "Introduction to modern database and data storage systems. Concepts covered include data models, query languages, database designs, storage structures, access methods, query processing and optimization, transaction management, and recovery in both relational and nonrelation data storage systems.", "fall", "general", "cs 2110;cs 2800.", "", "Data Science, Database Design", "3"], ["CS 4321", "Practicum in Database Systems", "Students build part of a database system in Java.", "fall", "computer graphics", "", "", "", "2"], ["CS 4410", "Operating Systems", "Introduction to the design of systems programs, with emphasis on multiprogrammed operating systems. Topics include concurrency, synchronization, deadlocks, memory management, protection, input-output methods, networking, file systems and security. The impact of network and distributed computing environments on operating systems is also discussed.", "fall,spring,summer", "scientific computing", "cs 3410,cs 3420", "", "", "3"], ["CS 4411", "Practicum in Operating Systems", "Studies the practical aspects of operating systems through the design and implementation of an operating system kernel that supports multiprogramming, virtual memory, and various input-output devices. All the programming for the project is in a high-level language.", "fall,spring", "artificial intelligence", "", "", "Software Engineering", "2"], ["CS 4420", "Computer Architecture", "This course aims to provide a strong foundation for students to understand modern computer system architecture and to apply these insights and principles to future computer designs. The course is structured around the three primary building blocks of general-purpose computing systems: processors, memories, and networks. The first half of the course focuses on the fundamentals of each building block. Topics include processor microcoding and pipelining; cache microarchitecture and optimization; and network topology, routing, and flow control. The second half of the course delves into more advanced techniques and will enable students to understand how these three building blocks can be integrated to build a modern shared-memory multicore system. Topics include superscalar execution, branch prediction, out-of-order execution, register renaming and memory disambiguation; VLIW, vector, and multithreaded processors; memory protection, translation, and virtualization; and memory synchronization, consistency, and coherence. This course includes a significant project decomposed into five lab assignments. Throughout the semester, students will gradually design, implement, test, and evaluate a complete multicore system capable of running real parallel applications at the register-transfer level.", "fall", "core", "cs 3420,cs 3410", "", "", "4"], ["CS 4700", "Foundations of Artificial Intelligence", "Challenging introduction to the major subareas and current research directions in artificial intelligence. Topics include knowledge representation, heuristic search, problem solving, natural-language processing, game-playing, logic and deduction, planning, and machine learning.", "fall,spring", "general", "cs 2110;cs 2800", "", "AI in real life", "3"], ["CS 4701", "Practicum in Artificial Intelligence", "Project portion of CS 4700. Topics include knowledge representation systems, search procedures, game-playing, automated reasoning, concept learning, reinforcement learning, neural nets, genetics algorithms, planning, and truth maintenance.", "fall,spring", "networks", "", "", "AI in real life", "2"], ["CS 4740", "Natural Language Processing", "Computationally oriented introduction to natural language processing, the goal of which is to enable computers to use human languages as input, output, or both. Possible topics include parsing, grammar induction, information retrieval, and machine translation.", "fall", "computer graphics", "cs 2110", "", "", "4"], ["CS 4750", "Foundations of Robotics", "Challenging introduction to basic computational concepts used broadly in robotics. Topics include simulation, kinematics, dynamics, control, optimization, and probabilistic inference. The mathematical basis of each area is emphasized, and concepts are motivated using common robotics applications and programming exercises. Students will participate in a series of projects over the course of the semester, in which they will implement algorithms that apply each of the topics discussed in class to real robotics problems.", "fall", "computer graphics", "", "", "Robotics", "4"], ["CS 4775", "Computational Genetics and Genomics", "Computational methods for analyzing genetic and genomic data._ Topics include sequence alignment, hidden Markov Models for discovering sequence features, motif finding using Gibbs sampling, phylogenetic tree reconstruction, inferring haplotypes, and local and global ancestry inference. Prior knowledge of biology is not necessary to complete this course.", "fall", "computer vision", "", "", "", "4"], ["CS 4786", "Machine Learning for Data Science", "An introduction to machine learning for data-science applications. Topics include dimensionality-reduction (such as principal components analysis, canonical correlation analysis, and random projection); clustering (such as k-means and single-link); probabilistic modeling (such as mixture models and the EM algorithm). This course can be taken independently or in any order with CS 4780/CS 5780.", "fall", "artificial intelligence", "", "", "Big Data", "4"], ["CS 4810", "Introduction to Theory of Computing", "Introduction to the modern theory of computing: automata theory, formal languages, and effective computability.", "fall", "artificial intelligence", "cs 2800", "", "", "3"], ["CS 4820", "Introduction to Analysis of Algorithms", "Develops techniques used in the design and analysis of algorithms, with an emphasis on problems arising in computing applications. Example applications are drawn from systems and networks, artificial intelligence, computer vision, data mining, and computational biology. This course covers four major algorithm design techniques (greedy algorithms, divide-and-conquer, dynamic programming, and network flow), undecidability and NP-completeness, and algorithmic techniques for intractable problems (including identification of structured special cases , approximation algorithms, local search heuristics, and online algorithms).", "fall,spring,summer", "artificial intelligence", "cs 2800;cs 3110", "", "Software Engineering,Data Science,AI in real life", "4"], ["CS 4998", "Team Projects", "Advanced independent work in computer science as part of a student-led team project._", "fall,spring", "artificial intelligence", "", "", "", "1"], ["CS 4999", "Independent Reading and Research", "Independent reading and research for undergraduates.", "fall,spring", "core", "", "", "", "1"], ["CS 5114", "Network Programming Languages", "This course provides an introduction to novel programming languages for controlling computer networks. It will examine recent proposals based on logic, functional, and streaming languages, as well as tools for establishing the correctness of programs written in such languages using SAT/SMT solvers, model checkers, and proof assistants. Evaluation will be based on class participation and projects.", "fall", "scientific computing", "cs 4110,cs 6110,cs 6410", "", "", "4"], ["CS 5220", "Applications of Parallel Computers", "Models for parallel programming and survey of parallel machines. Existing parallel programming languages, vectorizing compilers, and parallel libraries and toolboxes.", "fall", "networks", "", "", "Parallel Computing", "4"], ["CS 5306", "Crowdsourcing and Human Computation", "\"Crowdsourcing\" and \"human computation\" refer to various ways that people and computing have been brought together to achieve outcomes that were previously beyond our individual capabilities or expectations. Google's search algorithms, Wikipedia's millions of articles, Amazon's recommendations, and the success of Linux and other open source software projects are examples of ways in which technology and people together have exceeded the capabilities of people or machines in isolation. This course will survey the state of the art in this area, giving practical knowledge of the area, grounded in examples in such areas as artificial intelligence, citizen science, computational photography, e-commerce, epidemiology, finance, human perception, microlabor markets, and online gaming.", "fall", "general", "cs 1110,cs 1114,cs 2110,cs 3110", "", "Human-Computer Interaction", "4"], ["CS 5320", "Introduction to Database Systems", "Introduction to modern database and data storage systems. Concepts covered include data models, query languages, database design, storage structures, access methods, query processing and optimization, transaction management, and recovery in both relational and nonrelational data storage systems.", "fall", "general", "cs 2110,cs 2800", "", "Data Science,Database Design", "3"], ["CS 5321", "Practicum in Database Systems", "Students build part of a real database system in C++.", "fall", "general", "", "", "Data Science,Database Design", "2"], ["CS 5356", "Startup Systems Design and Engineering", "This course aims to bridge the gap between academic studies of computer science and production software engineering. The course provides a fast-paced introduction to key tools and techniques that can facilitate the building of prototypes and of actual working systems. It introduces technologies for building Web applications and mobile applications, systems for effective storage of data, and tools that support and ease code writing, such as distributed version-control systems, editors and debuggers.", "fall", "general", "cs 2110,cs 2112", "", "Entrepreneurship in Technology", "1"], ["CS 5357", "Advanced Startup Systems", "This hands on course is an extension of CS 5356_and will cover advanced topics including monitoring, scaling, redundancy, and deployment of production-ready systems.", "fall", "cryptography", "cs 5356", "", "Entrepreneurship in Technology", "1"], ["CS 5414", "Distributed Computing Principles", "Studies the abstractions and algorithms that constitute the foundations for implementing concurrent and distributed computing, with emphasis on supporting fault-tolerance. Topics vary to reflect advances in the field but typically include global state snapshots, causality and clocks (logical and physical), agreement and consensus, primary-backup and state-machine replication, quorums, and gossip. Students undertake a substantial software project to put these ideas into practice. Many students obtain additional project credit by co-registering in CS 4999_or CS 5999.", "fall", "general", "cs 4410", "", "Distributed Computing", "4"], ["CS 5435", "Security and Privacy Concepts in the Wild", "This course will impart a technical and social understanding of how and why security and privacy matter, how to think adversarially, how (and how not) to design systems and products. Less attention will be paid to specific skills such as hacking, writing secure code, and security administration. Topics will include user authentication, cryptography, malware, behavioral economics in security, human factors in security, privacy and anonymity, side channels, decoys and deception, and adversarial modeling. We will explore these concepts by studying real-world systems and attacks, including Bitcoin, Stuxnet, retailer breaches, implantable medical devices, and health apps, and considering issues to come in personal genomics, virtual worlds, and autonomous vehicles.", "fall", "general", "cs 2800,cs 4820", "", "Advance Topics in Cyber Security", "3"], ["CS 5450", "Networked and Distributed Systems", "Appropriate for advanced students who have no or limited networking knowledge. Note that there is project work in C or C++, so students should either know it or be prepared to learn it. Focuses on architectural principles of computer networking, network design principles (simplicity, scalability, performance, end-to-end), and how the Internet works today.", "fall or spring", "general", "cs 4410", "", "Cloud Computing,Distributed Computing", "3"], ["CS 5650", "Virtual and Augmented Reality", "Augmented and virtual reality technologies and applications are becoming increasingly popular. This course presents an introduction to this exciting area, with an emphasis on designing and developing virtual and augmented reality applications. The course will cover the history of the area, hardware technologies involved, interaction techniques, design guidelines, evaluation methods, and specific application areas. Students will be tasked with designing, developing, and evaluating their own augmented or virtual reality application as a course project.", "", "scientific computing", "", "", "Virtual and Augmented Reality", "3"], ["CS 5727", "Optimization Methods", "This course covers algorithmic and computational tools for solving optimization problems with the goal of providing decision-support for business intelligence. We will cover the fundamentals of linear, integer and nonlinear optimization. We will emphasize optimization as a large-scale computational tool, and show how to link programming languages with optimization software to develop industrial-strength decision-support systems. We will demonstrate how to incorporate uncertainty into optimization problems. Throughout the course, we will cover_a variety of modern applications, including pricing and marketing for e-commerce, ad auctions on the web, and on-line ride-sharing.", "", "scientific computing", "", "", "Advance Topics in Theory of Computation", "3"], ["CS 5740", "Natural Language Processing", "This course constitutes an introduction to natural language processing (NLP), the goal of which is to enable computers to use human languages as input, output, or both. NLP is at the heart of many of today's most exciting technological achievements, including machine translation, automatic conversational assistants and Internet search. Possible topics include summarization, machine translation, sentiment analysis and information extraction as well as methods for handling the underlying phenomena (e.g., syntactic analysis, word sense disambiguation, and discourse analysis).", "fall", "general", "cs 2110;cs 4780,cs 4786,cs 5785", "", "NLP Application", "4"], ["CS 5750", "Foundations of Robotics", "Challenging introduction to basic computational concepts used broadly in robotics. Topics include simulation, kinematics, dynamics, control, optimization, and probabilistic inference. The mathematical basis of each area is emphasized, and concepts are motivated using common robotics applications and programming exercises. Students will participate in a series of projects over the course of the semester, in which they will implement algorithms that apply each of the topics discussed in class to real robotics problems.", "fall", "cryptography", "", "", "Robotics", "4"], ["CS 5785", "Applied Machine Learning", "Learn and apply key concepts of modeling, analysis and validation from machine learning, data mining and signal processing to analyze and extract meaning from data. Implement algorithms and perform experiments on images, text, audio and mobile sensor measurements. Gain working knowledge of supervised and unsupervised techniques including classification, regression, clustering, feature selection, and dimensionality reduction.", "fall", "cryptography", "cs 2800", "", "Data Science", "3"], ["CS 5786", "Machine Learning for Data Science", "An introduction to machine learning for data-science applications. Topics include dimensionality-reduction (such as principal components analysis, canonical correlation analysis, and random projection); clustering (such as k-means and single-link); probabilistic modeling (such as mixture models and the EM algorithm)._This course can be taken independently or in any order with CS 4780/CS 5780.", "fall", "cryptography", "", "", "Data Science", "4"], ["CS 5854", "Networks and Markets", "The course examines how the computing, economic and sociological worlds are connected and how these connections affects these worlds. Tools from computer science, game theory and mathematics are introduced and then used to analyze network structures present in everyday life. Topics covered include social networks, web search, auctions, markets, voting, and crypto-currencies (e.g. bitcoin).", "fall", "cryptography", "", "", "", "3"], ["CS 5998", "Master of Engineering Internship", "Off-campus internship with industry in which a student gains knowledge and experience in the field of computer science.", "fall,spring", "computer graphics", "", "", "", "1"], ["CS 5999", "Master of Engineering Project", "Independent or group project under the direction of a CS field member or researcher. Projects involve the development of a computer science application (software or hardware) useful in exploring and/or solving an engineering problem with a computer science focus.", "fall,spring", "computer graphics", "", "", "", "1"], ["CS 6114", "Network Programming Languages", "This course provides an introduction to novel programming languages for controlling computer networks. It will examine recent proposals based on logic, functional, and streaming languages, as well as tools for establishing the correctness of programs written in such languages using SAT/SMT solvers, model checkers, and proof assistants. Evaluation will be based on class participation and projects.", "fall", "computer vision", "cs 4110,cs 6110,cs 6410", "", "Programming Languages", "4"], ["CS 6115", "Certified Software Systems", "In recent years, it has become practical to build large software systems using formal proof assistants. Examples of such certified systems include the seL4 microkernel, the CompCert C compiler, the Vellvm LLVM compiler, and the Bedrock library. This course provides a hands-on introduction to programming using the Coq proof assistant. Assessment is based on participation and a substantial course project.", "fall", "general", "cs 6110", "", "Complex Systems", "4"], ["CS 6180", "Introduction to Constructive Type Theory", "Constructive type theory is the mathematical foundation for modern proof assistants, which are software systems used to help verify the correctness of programs and mathematical proofs. Proof assistants are also used in teaching advanced programming and are essential tools in the study of formal methods. This course will cover the basics of the theory and then explore a number of applications ranging from verification that programs correctly meet their stated specifications to their use in solving open problems in mathematics. The extensive and rich research literature over the past forty years, along with several textbooks, will form the basis of this course.", "fall", "artificial intelligence", "", "", "", "3"], ["CS 6220", "Data-Sparse Matrix Computations", "Matrices and linear systems can be data-sparse in a wide variety of ways, and we can often leverage such underlying structure to perform matrix computations efficiently. This course will discuss several varieties of structured problems and associated algorithms. Example topics include randomized algorithms for numerical linear algebra, Krylov subspace methods, sparse recovery, and assorted matrix factorizations.", "fall", "artificial intelligence", "cs 4220,cs 6210.", "", "Computing for Scientific Applications", "4"], ["CS 6410", "Advanced Systems", "Advanced course in systems, emphasizing contemporary research in distributed systems. Topics may include communication protocols, consistency in distributed systems, faulttolerance, knowledge and knowledge-based protocols, performance, scheduling, concurrency control, and authentication and security issues.", "fall", "artificial intelligence", "cs 4410", "", "Complex Systems", "4"], ["CS 6432", "Distributed Consensus and Blockchains", "Distributed consensus protocols have been widely adopted in replicated databases and_decentralized cryptocurrencies. In this course, we will explore how to design formally secure_protocols that allow nodes to reach consensus in a distributed system. Both classical_consensus and modern blockchains will be discussed.", "fall", "cryptography", "cs 2800", "", "Distributed Computing, Blockchains", "3"], ["CS 6455", "Advanced Computer Networking", "This course explores state-of-the-art network architectures and protocols through a review of recent research literature, discussions during lectures and class projects. Students will complete a semester-long research project based on one of the topics covered in the class._", "fall", "general", "cs 4410", "", "", "4"], ["CS 6465", "Emerging Cloud Technologies and Systems Challenges", "Course explores new hardware and software technologies that are likely to have a major impact on large-scale computer systems, with a focus on understanding the research challenges that will arise as we start to integrate them into existing cloud infrastructures. The class will center on a mix of readings, discussion, and individualized research activities. The technologies to be discussed may include, for example, RDMA networking, network interfaces with novel capabilities, new memory options such as 3D-XPoint and high-density multi-layer NAND/SSD, battery-backed SSD, NetFPGA and GPU co-processors, and the new Intel SGX enclave security technology.", "fall", "general", "cs 6410", "", "Cloud Computing,Distributed Computing", "3"], ["CS 6670", "Computer Vision", "This course will introduce the core problems of computer vision and discuss both classical approaches based on the geometry and physics of image formation as well as current approaches based on recent advances in deep learning. Topics include stereopsis and 3D reconstruction, optical flow, image segmentation, object recognition, feature representations of images and patches, and convolutional networks.", "fall", "general", "", "", "Computer Vision", "4"], ["CS 6741", "Structured Prediction for Natural Language Processing", "Robust language understanding has the potential to transform how we interact with computers, extract information from text and study language on large scale. However, to accurately recover the meaning of language, automated systems must learn to reason about the meaning of words and the intricate structures they combine to. This research-oriented course examines machine learning and inference methods for recovering structured representations of language meaning. Possible topics include formalisms, inference and learning for: sequence models (tagging, named-entity recognition), tree models (constituency and dependency parsing), mapping sentences to logical form representations and alignment models (machine translation).", "fall", "general", "cs 2110;cs 4780,cs 5780,cs 6780", "", "NLP Application", "3"], ["CS 6742", "Natural Language Processing and Social Interaction", "More and more of life is now manifested online, and many of the digital traces that are left by human activity are increasingly recorded in natural-language format. This research-oriented course examines the opportunities for natural language processing to contribute to the analysis and facilitation of socially embedded processes. Possible topics include sentiment analysis, learning social-network structure, analysis of text in political or legal domains, review aggregation systems, analysis of online conversations, and text categorization with respect to psychological categories.", "fall", "scientific computing", "cs 2110", "", "NLP Application", "3"], ["CS 6784", "Advanced Topics in Machine Learning", "Extends and complements CS 4780_and CS 5780, giving in-depth coverage of new and advanced methods in machine learning.", "fall", "database", "cs 4780,cs 5780", "", "Advanced Topics in Machine Learning", "4"], ["CS 6787", "Advanced Machine Learning Systems", "Graduate-level introduction to system-focused aspects of machine learning, covering guiding principles and commonly used techniques for scaling up to large data sets. Topics will include stochastic gradient descent, acceleration, variance reduction, methods for choosing metaparameters, parallelization within a chip and across a cluster, and innovations in hardware architectures. An open-ended project in which students apply these techniques is a major part of the course.", "fall", "cryptography", "cs 4780,cs 4786", "", "Advanced Topics in Machine Learning", "4"], ["CS 6820", "Analysis of Algorithms", "Methodology for developing and analyzing efficient algorithms. Understanding the inherent complexity of natural problems via polynomial-time algorithms, advanced data structures, randomized algorithms, approximation algorithms, and NP-completeness. Additional topics may include algebraic and number theoretic algorithms, circuit lower bounds, online algorithms, or algorithmic game theory.", "fall", "cryptography", "cs 4820", "", "Advanced Topics in Algorithms", "4"], ["CS 7090", "Computer Science Colloquium", "Weekly meeting for the discussion and study of important topics in the field.", "fall,spring", "cryptography", "", "", "", "1"], ["CS 7190", "Seminar in Programming Languages", "The Programming Languages Discussion Group meets weekly to discuss papers in the area of programming languages, program analysis, and compilers. The goal is to encourage interactions and discussions between students, researchers, and faculty with interests in this area. The seminar is open to everybody interested in languages and compilers. First-year and second-year students are especially encouraged to participate.", "fall,spring", "artificial intelligence", "cs 6110", "", "Programming Languages", "1"], ["CS 7290", "Seminar on Scientific Computing and Numerics", "Talks on various methods in scientific computing, the analysis of their convergence properties and computational efficiency, and their adaptation to specific applications.", "fall,spring", "artificial intelligence", "", "", "", "1"], ["CS 7390", "Database Seminar", "The database seminar is the weekly meeting of students and faculty interested in data management and data mining at Cornell. We typically discuss one or two papers on related topics per session. We focus on recent and seminal papers of general interest.", "fall,spring", "artificial intelligence", "", "", "", "1"], ["CS 7490", "Systems Research Seminar", "The Systems Research Seminar discusses recent, interesting papers in the systems area, broadly defined to span operating systems, distributed systems, networking, architecture, databases, security, and programming languages. The goal is to foster technical discussions among the Cornell systems research community.", "fall,spring", "artificial intelligence", "", "", "", "1"], ["CS 7493", "Computer Security Seminar", "This is a graduate seminar primarily aimed at Ph.D. students. Students will read, present, and discuss recent and classic papers in the computer security area. Outside speakers will also be invited to present current research.", "fall,spring", "networks", "cs 4410", "", "", "1"], ["CS 7790", "Seminar in Artificial Intelligence", "The AI seminar will meet weekly for lectures by graduate students, faculty, and researchers emphasizing work-in-progress and recent results in AI research.", "fall,spring", "scientific computing", "", "", "", "1"], ["CS 7794", "Seminar in Natural Language Understanding", "This course, the NLP seminar, is a weekly meeting for people currently or soon to be actively doing research in NLP. (Students simply looking to learn more about NLP should not enroll, but should take one of our lecture courses instead.) One participant leads discussion each week, either of a recently published paper or of their own work in progress. Attendance at all sessions is mandatory.", "fall,spring", "general", "", "", "", "1"], ["CS 7796", "Robotics Seminar", "Informal seminar in which current topics in robotics are discussed.", "fall,spring", "general", "", "", "", "1"], ["CS 7890", "Seminar in Theory of Algorithms and Computing", "", "fall,spring", "general", "", "", "", "1"], ["CS 7893", "Cryptography Seminar", "Seminar for discussing recent or classical papers in cryptography.", "fall,spring", "general", "", "", "", "1"], ["CS 7999", "Independent Research", "Independent research for CS PhD students who have not yet passed their A-exam.", "fall,spring", "cryptography", "", "", "", "1"], ["CS 9999", "Thesis Research", "Doctoral research.", "fall,spring", "computer graphics", "", "", "", "1"], ["CS 1110", "Introduction to Computing Using Python", "Programming and problem solving using Python. Emphasizes principles of software development, style, and testing. Topics include procedures and functions, iteration, recusion, arrays and vectors, strings, an operational model of procedure and function calls, algorithms, exceptions, object-oriented programming, and GUIs (graphical user interfaces). Weekly labs provide guided practice on the computer, with staff present to help. Assignments use graphics and GUIs to help develop fluency and understanding.", "fall,spring,summer", "general", "", "", "", "4"], ["CS 1112", "Introduction to Computing Using MATLAB", "Programming and problem solving using MATLAB. Emphasizes the systematic development of algorithms and programs. Topics include iteration, functions, arrays, recursion, object-oriented programming, and MATLAB graphics. Assignments are designed to build an appreciation for complexity, dimension, fuzzy data, inexact arithmetic, randomness, simulation, and the role of approximation.", "fall,spring", "artificial intelligence", "", "", "", "4"], ["CS 1132", "Short Course in MATLAB", "Introduction to the MATLAB programming language. Covers the basic programming constructs of MATLAB, including assignment, conditionals, iteration, functions, arrays, vectorized computation, and scientific graphics. Designed for students who need MATLAB for research or other courses. Does not assume any previous programming experience.", "fall,spring", "artificial intelligence", "", "", "", "2"], ["CS 1133", "Short Course in Python", "Introduction to the Python programming language. Covers the basic programming constructs of Python, including assignment, conditionals, iteration, functions, object-oriented design, arrays, and vectorized computation. Designed for students who need Python for research or other courses. Does not assume any previous programming experience.", "fall,spring", "general", "", "", "", "2"], ["CS 1380", "Data Science for All", "This course provides an introduction to data science. Given data from economics, medicine, biology, or physics, collected from internet denizens, survey respondents, or wireless sensors, how can one understand the phenomenon generating the data, make predictions, and improve decisions? We focus on building skills in inferential thinking and computational thinking, guided by the practical questions we seek to answer. The course teaches critical concepts and skills in computer programming and statistical inference, in conjunction with hands-on analysis of real-world datasets including economic data, document collections, geographical data, and social networks. We will also consider social issues in data analysis such as privacy and design.", "spring", "cryptography", "", "", "", "4"], ["CS 1710", "Introduction to Cognitive Science", "This course provides an introduction to the science of the mind._ Most people have privileged access to one mind, yet this internal experience is often misleading and provides little insight into how minds emerge from physical entities like brains (or other substrates). Instead, an objective, deliberated, and multidisciplinary approach is necessary._ To that end, cognitive science draws on, and integrates, at least five disciplines: Psychology, Neuroscience, Computer Science, Linguistics, and Philosophy._ This course provides an introduction to the insights that these disciplines offer cognitive science while introducing students to current understanding of attention, memory, visual perception, learning, problem solving, language comprehension, and consciousness._", "spring,summer (six-week session)", "general", "", "", "", "3"], ["CS 1998", "Freshmen and Nontechnical Team Projects", "Freshmen and Nontechnical Team Projects.", "fall,spring", "general", "", "", "", "1"], ["CS 2110", "Object-Oriented Programming and Data Structures", "Intermediate programming in a high-level language and introduction to computer science. Topics include program structure and organization, object-oriented programming (classes, objects, types, sub-typing), graphical user interfaces, algorithm analysis (asymptotic complexity, big \"O\" notation), recursion, data structures (lists, trees, stacks, queues, heaps, search trees, hash tables, graphs), graph algorithms. Java is the principal programming language.", "fall,spring,summer", "core", "cs 1110,cs 1112,cs 1114,cs 1115", "", "", "3"], ["CS 2111", "Programming Practicum", "Meets weekly for one hour, in collaboration with CS 2110. Designed to enhance understanding of object-oriented programming, use of the application for writing Java programs, and other programming issues, as well as theoretical concepts that arise in CS 2110. The hour is spent in ways appropriate to the material under study -lecture, question-answer session, problem solving in small groups, one-on-one help, etc.", "fall,spring", "general", "", "", "", "1"], ["CS 2300", "Intermediate Design and Programming for the Web", "Web programming requires the cooperation of two machines: the one in front of the viewer (client) and the one delivering the content (server)._INFO 1300_concentrates almost exclusively on the client side. The main emphasis in INFO 2300 is learning about server side processing. Students begin with a short overview of the PHP server-side scripting language, then look at interactions with databases, learning about querying via the database language SQL. Through a succession of projects, students learn how to apply this understanding to the creation of an interactive, data-driven site via PHP and the MYSQL database. Also considered are technologies such as Javascript and Ajax and techniques to enhance security and privacy. Design and usability issues are emphasized. A major component of the course is the creation of a substantial web site.", "spring", "general", "cs 1300", "", "", "3"], ["CS 2770", "Excursions in Computational Sustainability", "Balancing environmental, economic, and societal needs for a sustainable future encompasses problems of unprecedented size and complexity. Computing and information science can play an important role in addressing critical sustainability challenges faced by present and future generations. The goal of the course is to introduce students to a range of sustainability challenges and to computational methods that can help address such challenges. Sustainability topics include sustainable development, biodiversity and wildlife conservation, poverty mitigation, food security, renewable resources, energy, transportation, and climate change. In the context of these sustainability topics, the course will introduce students to mathematical and computational modeling techniques, algorithms, and statistical methods. The course is at the introductory undergraduate level. Students are expected to have basic knowledge of probability theory and calculus.", "spring", "scientific computing", "", "", "", "3"], ["CS 2800", "Discrete Structures", "Covers the mathematics that underlies most of computer science. Topics include mathematical induction; logical proof; propositional and predicate calculus; combinatorics and discrete mathematics; some basic elements of basic probability theory; basic number theory; sets, functions, and relations; graphs; and finite-state machines. These topics are discussed in the context of applications to many areas of computer science, such as the RSA cryptosystem and web searching.", "fall,spring", "core", "", "", "", "3"], ["CS 3110", "Data Structures and Functional Programming", "Advanced programming course that emphasizes functional programming techniques and data structures. Programming topics include recursive and higher-order procedures, models of programming language evaluation and compilation, type systems, and polymorphism. Data structures and algorithms covered include graph algorithms, balanced trees, memory heaps, and garbage collection. Also covers techniques for analyzing program performance and correctness.", "fall,spring", "core", "cs 2110", "cs 3410,cs 3420", "", "4"], ["CS 3152", "Introduction to Computer Game Architecture", "A project-based course in which programmers and designers collaborate to make a computer game. This course investigates the theory and practice of developing computer games from a blend of technical, aesthetic, and cultural perspectives. Technical aspects of game architecture include software engineering, artificial intelligence, game physics, computer graphics, and networking. Aesthetic and cultural include art and modeling, sound and music, game balance, and player experience.", "spring", "computer graphics", "", "", "", "4"], ["CS 3300", "Data-Driven Web Applications", "This course will introduce students to working with data in the context of modern web applications. These include data representation with relational and non-relational databases, data mining to find patterns and make predictions, and graphical presentation for visualization.", "spring", "database", "cs 2110;cs 2300", "", "", "3"], ["CS 3410", "Computer System Organization and Programming", "Introduction to computer organization, systems programming and the hardware/ software interface. Topics include instruction sets, computer arithmetic, datapath design, data formats, addressing modes, memory hierarchies including caches and virtual memory, I/O devices, bus-based I/O systems, and multicore architectures. Students learn assembly language programming and design a pipelined RISC processor.", "fall,spring", "core", "cs 2110", "", "", "4"], ["CS 3420", "Embedded Systems", "An introduction to the design of embedded systems, with an emphasis on understanding the interaction between hardware, software, and the physical world. Topics covered include assembly language programming, interrupts, I/O, concurrency management, scheduling, resource management, and real-time constraints.", "spring", "core", "", "", "", "4"], ["CS 4090", "Teaching Experience in Computer Science", "Earn course credit for working as a consultant or ugrad TA in a computer science course.", "fall,spring", "general", "", "", "", "1"], ["CS 4120", "Introduction to Compilers", "An introduction to the specification and implementation of modern compilers. Topics covered include lexical scanning, parsing, type checking, code generation and translation, an introduction to program analysis and optimization, and compile-time and run-time support for modern programming languages. As part of the course, students will build a working compiler for an object-oriented language.", "spring", "general", "cs 3110", "", "Compiler Design", "3"], ["CS 4121", "Practicum in Compilers", "Students will build a working compiler for an object-oriented language.", "spring", "general", "", "", "Compiler Design", "2"], ["CS 4152", "Advanced Topics in Computer Game Architecture", "Project-based follow-up course to CS 3152. Students work in a multidisciplinary team to develop a game that incorporates innovative game technology. Advanced topics include 3D game development, mobile platforms, multiplayer gaming, and nontraditional input devices._ There is a special emphasis on developing games that can be submitted to festivals and competitions.", "spring", "computer graphics", "cs 3152;cs 3300,cs 4620,cs 4700,cs 4758,cs 5414", "", "Computer Gameification", "3"], ["CS 4220", "Numerical Analysis: Linear and Nonlinear Problems", "Introduction to the fundamentals of numerical linear algebra: direct and iterative methods for linear systems, eigenvalue problems, singular value decomposition. In the second half of the course, the above are used to build iterative methods for nonlinear systems and for multivariate optimization. Strong emphasis is placed on understanding the advantages, disadvantages, and limits of applicability for all the covered techniques. Computer programming is required to test the theoretical concepts throughout the course.", "spring", "scientific computing", "", "", "Advanced Topics in Algorithms", "4"], ["CS 4300", "Language and Information", "How to make sense of the vast amounts of information available online, and how to relate it and to the social context in which it appears? This course introduces basic tools for retrieving and analyzing unstructured textual information from the web and social media. Applications include information retrieval (with human feedback),_sentiment analysis and social analysis of text. The coursework will include_programming projects that play on the interaction between knowledge and social factors.", "spring", "artificial intelligence", "", "", "", "3"], ["CS 4410", "Operating Systems", "Introduction to the design of systems programs, with emphasis on multiprogrammed operating systems. Topics include concurrency, synchronization, deadlocks, memory management, protection, input-output methods, networking, file systems and security. The impact of network and distributed computing environments on operating systems is also discussed.", "fall,spring,summer", "core", "cs 3410,cs 3420", "", "Software Engineering", "3"], ["CS 4411", "Practicum in Operating Systems", "Studies the practical aspects of operating systems through the design and implementation of an operating system kernel that supports multiprogramming, virtual memory, and various input-output devices. All the programming for the project is in a high-level language.", "fall,spring", "general", "", "", "Operating Systems", "2"], ["CS 4450", "Introduction to Computer Networks", "This course introduces the basic architectural and design principles of computer networking including the design of communication protocols, congestion control, routing and switching, Internet, data center networks and wireless networks.", "spring", "networks", "cs 4410", "", "", "3"], ["CS 4620", "Introduction to Computer Graphics", "Introduction to the principles of computer graphics in two and three dimensions. _Topics include_digital images, filtering and antialiasing, 2-D and 3-D affine geometry, ray tracing, perspective and 3-D viewing, the graphics pipeline, curves and surfaces, and human visual perception. This course emphasizes fundamental techniques in graphics, with both written and practical assignments. _May be taken with or without concurrent enrollment in CS 4621.", "spring", "computer graphics", "cs 2110", "", "Computer Animation", "3"], ["CS 4621", "Computer Graphics Practicum", "Provides CS 4620_students with hands-on experience in computer graphics programming on modern graphics hardware. This course emphansizes effective use of graphics APIs and the architecture of graphics applicaitons. _A final project involves building a substantial interactive graphics system. _The course uses Java and OpenGL for code development.", "spring", "computer graphics", "", "", "Computer Animation", "2"], ["CS 4670", "Introduction to Computer Vision", "An in-depth introduction to computer vision. The goal of computer vision is to compute properties of our world-the 3D shape of an environment, the motion of objects, the names of people or things-through analysis of digital images or videos. _The course covers a range of topics, including 3D reconstruction, image segmentaion, object recognition, and vision algorithms fro the Internet, as well as key algorithmic, optimization, and machine learning techniques, such as graph cuts, non-linear least squares, and deep learning. _This course emphasizes hands-on experience with computer vision, and several large programming projects.", "spring", "computer vision", "cs 2110,cs 2800", "", "Computer Vision", "4"], ["CS 4700", "Foundations of Artificial Intelligence", "Challenging introduction to the major subareas and current research directions in artificial intelligence. Topics include knowledge representation, heuristic search, problem solving, natural-language processing, game-playing, logic and deduction, planning, and machine learning.", "fall,spring", "artificial intelligence", "cs 2110;cs 2800", "", "", "3"], ["CS 4701", "Practicum in Artificial Intelligence", "Project portion of CS 4700. Topics include knowledge representation systems, search procedures, game-playing, automated reasoning, concept learning, reinforcement learning, neural nets, genetics algorithms, planning, and truth maintenance.", "fall,spring", "artificial intelligence", "", "", "", "2"], ["CS 4744", "Computational Linguistics", "Computational models of natural languages. Topics include tree syntax and treebank databases; broad-coverage probabilistic grammars; finite state generative phonology; computational semantics; computational minimalist grammar; finite state optimality-theoretic phonology; Hidden Markov models of acoustic realization; text and speech corpora; lab methods in Unix/Linux environment.", "spring", "artificial intelligence", "", "", "", "4"], ["CS 4780", "Machine Learning for Intelligent Systems", "An introduction to machine learning for intelligent systems (e.g. search engines, recommender systems, ad placement). Topics include supervised learning, statistical learning theory, and online learning.", "spring", "artificial intelligence", "", "", "Machine Learning in Applications", "4"], ["CS 4820", "Introduction to Analysis of Algorithms", "Develops techniques used in the design and analysis of algorithms, with an emphasis on problems arising in computing applications. Example applications are drawn from systems and networks, artificial intelligence, computer vision, data mining, and computational biology. This course covers four major algorithm design techniques (greedy algorithms, divide-and-conquer, dynamic programming, and network flow), undecidability and NP-completeness, and algorithmic techniques for intractable problems (including identification of structured special cases , approximation algorithms, local search heuristics, and online algorithms).", "fall,spring,summer", "core", "cs 2800;cs 3110", "", "Software Engineering", "4"], ["CS 4850", "Mathematical Foundations for the Information Age", "Covers the mathematical foundations for access to information. Topics include high dimensional space, random graphs, singular value decomposition, Markov processes, learning theory, and algorithms for massive data.", "spring", "scientific computing", "cs 2800", "", "", "4"], ["CS 4852", "Networks II: Market Design", "Networks II builds on its prerequisite course and continues to examine how each of the computing, economic, sociological and natural worlds are connected and how the structure of these connections affects these worlds. In this course, we will construct mathematical models for and analyze networked settings, allowing us to both make predictions about behavior in such systems, as well as reason about how to design such systems to exhibit some desirable behavior. Throughout, we will draw on real-world examples such as social networks, peer-to-peer filesharing, Internet markets, and crowdsourcing, that illustrate these phenomena.", "spring", "networks", "", "", "", "3"], ["CS 4860", "Applied Logic", "Propositional and predicate logic, compactness and completeness using tableaux, natural deduction, and/or resolution. Other topics chosen from the following: Equational logic. Herbrand Universes and unification. Rewrite rules and equational logic, Knuth-Bendix method, and the congruence-closure algorithm and lambda-calculus reduction strategies. Modal logics, intuitionistic logic, Prolog, LISP, ML, or Nuprl. Applications to expert systems and program verification. Noncomputability (Turing) and incompleteness (G_del).", "spring", "general", "", "", "", "4"], ["CS 4990", "International Research Internship", "", "", "general", "", "", "", "6"], ["CS 4998", "Team Projects", "Advanced independent work in computer science as part of a student-led team project._", "fall,spring", "general", "", "", "", "1"], ["CS 4999", "Independent Reading and Research", "Independent reading and research for undergraduates.", "fall,spring", "general", "", "", "", "1"], ["CS 5094", "Introduction to Blockchains, Cryptocurrencies, and Smart Contracts", "Viewed variously as a niche currency for online criminals and a technological threat to the financial industry, Bitcoin has fueled mythmaking, financial speculation, and real technological innovation. We will study both Bitcoin and the technological landscape it has inspired and catalyzed. Topics will include: The mechanics of consensus algorithms, such as Proof of Work and Byzantine Consensus, and their role in blockchains and cryptocurrencies; cryptographic tools employed in cryptocurrencies, including digital signatures algorithm and zero-knowledge proofs; the evolution and mechanics of Bitcoin and its ecosystem; smart contracts; and special topics, such as trusted hardware in blockchain-based systems, smart contracts and real-world contract law, and cryptocurrencies and crime.", "spring", "cryptography", "", "", "Blockchains", "1"], ["CS 5120", "Introduction to Compilers", "An introduction to the specification and implementation of modern compilers. Topics covered include lexical scanning, parsing, type checking, code generation and translation, an introduction to program analysis and optimization, and compile-time and run-time support for modern programming languages. As part of the course, students will build a working compiler for an object-oriented language.", "spring", "general", "cs 3110;cs 3420,cs 3410", "", "Compiler Design", "3"], ["CS 5121", "Practicum in Compilers", "Students will build a working compiler for an object-oriented language.", "fall", "general", "", "", "Compiler Design", "2"], ["CS 5150", "Software Engineering", "Introduction to the practical problems of specifying, designing, and building large, reliable software systems. Students work in teams on projects for real clients. This work includes a feasibility study, requirements analysis, object-oriented design, implementation, testing, and delivery to the client. Additional topics covered in lectures include professionalism, project management, and the legal framework for software development.", "spring", "general", "cs 2110", "", "Software Engineering", "4"], ["CS 5304", "Data Science in the Wild", "Massive amounts of data are collected by many companies and organizations and the task of a data scientist is to extract actionable knowledge from the data __ for scientific needs, to improve public health, to promote businesses, for social studies and for various other purposes. This course will focus on the practical aspects of the field and will attempt to provide a comprehensive set of tools for extracting knowledge from data.", "spring", "scientific computing", "", "", "Data Science", "3"], ["CS 5412", "Cloud Computing", "Focuses on cloud computing, large-scale Internet applications, and other practical issues in designing and implementing trustworthy, scalable distributed software.", "spring", "scientific computing", "cs 4410", "", "Cloud Computing", "4"], ["CS 5424", "Developing and Designing Interactive Devices", "This course provides an introduction to the human-centered and technical workings behind interactive devices ranging from cell phones and video controllers to household appliances and smart cars. This is a hands-on, lab-based course. For the final project, students will build a functional IoT prototype of their own design, using Javascript, single-board Linux computer, embedded microcontrollers, and other electronics components. Topics include electronics prototyping, interface prototyping, sensors and actuators, microcontroller development, physical prototyping and user testing.", "spring", "general", "", "", "Human-Computer Interaction", "3"], ["CS 5430", "System Security", "Discusses security and survivability for computers and communications networks. Includes discussions of policy issues (e.g., the national debates on cryptography policy) as well as discussions of the technical alternatives for implementing the properties that comprise \"trustworthiness\" in a computing system. Covers mechanisms for authorization and authentication as well as cryptographic protocols.", "spring", "cryptography", "cs 4410", "", "Cyber Security", "4"], ["CS 5431", "Practicum in System Security", "Explores the design and construction of secure computing systems, including secure coding and the use of software analysis tools. Course involves the construction of a significant project group project.", "spring", "cryptography", "", "", "Cyber Security", "2"], ["CS 5433", "Blockchains, Cryptocurrencies, and Smart Contracts", "Viewed variously as a niche currency for online criminals and a technological threat to the financial industry, Bitcoin has fueled mythmaking, financial speculation, and real technological innovation. We will study both Bitcoin and the technological landscape it has inspired and catalyzed. Topics will include: the mechanics of consensus algorithms, such as Proof of Work and Byzantine Consensus, and their role in blockchains and cryptocurrencies; cryptographic tools employed in cryptocurrencies, including digital signatures algorithm and zero-knowledge proofs; the evolution and mechanics of Bitcoin and its ecosystem; smart contracts; and special topics, such as trusted hardware in blockchain-based systems, smart contracts and real-world contract law, and cryptocurrencies and crime. Grading will be based on homework assignments and a final project.", "spring", "cryptography", "", "", "Blockchains", "3"], ["CS 5436", "Privacy in the Digital Age", "This course introduces students to privacy technologies and surveys the current state of digital privacy from multiple perspectives, including technology, law, policy, ethics, economics, and surveillance.", "spring", "cryptography", "", "", "Ethics in Computing", "3"], ["CS 5620", "Introduction to Computer Graphics", "Introduction to the principles of computer graphics in two and three dimensions. Topics include digital images, filtering and antialiasing, 2-D and 3-D affine geometry, ray tracing, perspective and 3-D viewing, the graphics pipeline, curves and surfaces, and human visual perception. Homework assignments require some Java programming.", "spring", "computer graphics", "cs 2110", "", "", "3"], ["CS 5621", "Computer Graphics Practicum", "Provides CS 4620_students with hands-on experience in computer graphics programming on modern graphics hardware. A semester-long project involves building a substantial interactive 3D system. The course uses Java and OpenGL for code development.", "spring", "computer graphics", "", "", "Advance Topics in Computer Graphics", "2"], ["CS 5670", "Introduction to Computer Vision", "An in-depth introduction to computer vision. The goal of computer vision is to compute properties of our world-the 3D shape of an environment, the motion of objects, the names of people or things-through analysis of digital images or videos. _The course covers a range of topics, including 3D reconstruction, image segmentaion, object recognition, and vision algorithms fro the Internet, as well as key algorithmic, optimization, and machine learning techniques, such as graph cuts, non-linear least squares, and deep learning. _This course emphasizes hands-on experience with computer vision, and several large programming projects.", "spring", "computer vision", "cs 2110,cs 2800", "", "Computer Vision", "4"], ["CS 5682", "HCI and Design", "Human-Computer Interaction (HCI) and design theory and techniques. Methods for designing, prototyping, and evaluating user interfaces. Basics of visual design, graphic design, and interaction design. Understanding human capabilities, interface technology, interface design methods, prototyping tools, and interface evaluation tools and techniques.", "spring", "general", "", "", "Human-Computer Interaction", "3"], ["CS 5726", "Learning and Decision Making", "This course covers the analysis of data for making decisions with applications to electronic commerce, AI and intelligent agents, business analytics, and personalized medicine. The focus will be on learning good and automated decision policies, inferring causal effects of potential decisions, and interactive and intelligent systems that learn through acting and act to learn. Topics include A/B testing, sequential decision making and bandits, decision theory, risk minimization and generalization, Markov decision processes, reinforcement learning, analysis of observational data, instrumental variable analysis, and algorithmic fairness of personalized decision policies. Students are expected to have taken a first course in machine learning and have working knowledge of calculus, probability, and linear algebra as well as a modern scripting language such as Python.", "spring", "artificial intelligence", "cs 5785", "", "Machine Learning in Applications", "3"], ["CS 5740", "Natural Language Processing", "This course constitutes an introduction to natural language processing (NLP), the goal of which is to enable computers to use human languages as input, output, or both. NLP is at the heart of many of today's most exciting technological achievements, including machine translation, automatic conversational assistants and Internet search. Possible topics include summarization, machine translation, sentiment analysis and information extraction as well as methods for handling the underlying phenomena (e.g., syntactic analysis, word sense disambiguation, and discourse analysis).", "fall", "artificial intelligence", "cs 2110;cs 4780,cs 4786,cs 5785", "", "NLP Application", "3"], ["CS 5780", "Machine Learning for Intelligent Systems", "An introduction to machine learning for intelligent systems (e.g. search engines, recommender systems, ad placement). Topics include supervised learning, statistical learning theory, and online learning. This course can be taken independently or in any order with CS 4786/CS 5786.", "spring", "artificial intelligence", "", "", "Machine Learning in Applications", "4"], ["CS 5830", "Cryptography", "Introductory course in Cryptography. Topics include one-way functions, encryption, digital signatures, pseudo-random number generation, zero-knowledge and basic protocols. The emphasis will be on fundamental notions and constructions with proofs of security based on precise definitions and assumptions.", "spring", "cryptography", "cs 2800", "", "", "3"], ["CS 5998", "Master of Engineering Internship", "Off-campus internship with industry in which a student gains knowledge and experience in the field of computer science.", "fall,spring", "general", "", "", "", "1"], ["CS 5999", "Master of Engineering Project", "Independent or group project under the direction of a CS field member or researcher. Projects involve the development of a computer science application (software or hardware) useful in exploring and/or solving an engineering problem with a computer science focus.", "fall,spring", "general", "", "", "", "1"], ["CS 6110", "Advanced Programming Languages", "Study of programming paradigms: functional, imperative, concurrent, and probabilistic programming. Mathematical foundations: inductive definitions, fixed points, and formal semantics. Models of programming languages including the lambda calculus. Type systems, polymorphism, modules, and object-oriented constructs. Program transformations, program logic, and applications to programming methodology._", "spring", "general", "", "", "software engineering", "4"], ["CS 6117", "Category Theory for Computer Scientists", "An introduction to category theory, with a focus on material with established applications to computer science and programming languages, in particular. The course emphasizes developing comfort with abstraction and instantiation.", "spring", "general", "cs 3110", "", "", "4"], ["CS 6241", "Numerical Methods for Data Science", "A discussion of numerical methods (particularly iterative methods for linear algebra and optimization) in the context of machine learning and data analysis problems._ The course will particularly focus on sparsity, rank structure, and spectral behavior of underlying linear algebra problems; convergence behavior and \"regularization via iteration\" effects for standard solvers; and comparisons between numerical methods for data analysis with large-scale numerical methods used in other areas of science and engineering.", "spring", "scientific computing", "", "", "", "3"], ["CS 6320", "Advanced Database Systems", "Covers a variety of advanced issues ranging from transaction management to query processing to data mining. Involves extensive paper reading and discussion.", "spring", "database", "cs 4320", "", "Data Science,Database Design", "4"], ["CS 6411", "Systems Principles", "The design of computer systems is driven by a small number of principles that are leveraged to achieve both functionality and performance. These principles, and the key techniques used to instantiate them, are the subject of this course. We will study them both in isolation and in the context of systems in which they have been applied. Examples will be drawn from computer architecture and organization, operating systems, database management systems, computer networks, and distributed systems. A final paper or project will be due on which the course grade will be based. It will be either an independent study with final paper and presentation, or a software project and presentation, at the students' choice.", "spring", "general", "cs 4410", "", "Software Architect Design", "4"], ["CS 6431", "Security and Privacy Technologies", "A survey of modern security and privacy technologies. Topics include exploitation techniques, Web and mobile security, uses and misuses of cryptography in secure systems, attacking and defending secure network protocols, data privacy and anonymity, censorship resistance, electronic payments.", "spring", "cryptography", "", "", "", "4"], ["CS 6466", "Cryptocurrencies and Smart Contracts", "This paper-reading course will examine the design and implementation of cryptocurrencies, digital coin systems and smart tokens. Starting with the initial virtual currency proposals from the 90's, we will cover the landmark papers that provide the foundation for today's cryptocurrencies and smart contract platforms, with some emphasis on public key cryptography, consensus protocols, and other foundational building blocks. The course will also cover smart contract construction, including Digital Autonomous Organizations and other application areas.", "spring", "cryptography", "cs 2110", "", "Cyber Currency", "3"], ["CS 6700", "Advanced Artificial Intelligence", "Covers a variety of areas in AI, including knowledge representation, automated reasoning, learning, game-playing, and planning, with an emphasis on computational issues.", "spring", "artificial intelligence", "cs 4700", "", "Advance Topics in Artificial Intelligence", "4"], ["CS 6740", "Advanced Language Technologies", "Graduate-level introduction to technologies for the computational treatment of information in human-language form, covering modern natural-language processing (NLP) and/or information retrieval (IR). Possible topics include latent semantic analysis (LSI), clickthrough data for web search, language modeling, text categorization and clustering, information extraction, computational syntactic and semantic formalisms, grammar induction, and machine translation.", "spring", "general", "", "", "NLP Application", "3"], ["CS 6751", "Introduction to Robotic Mobile Manipulation", "Mobile manipulation is the ability for a robot to interact physically with versatility in the world. As robots become integrated into complex human environments, mobile manipulation is increasingly necessary. Robotic mobile manipulation will enable such applications as personal assistant robots in the home and factory worker in advanced manufacturing. This course covers the fundamental theory, concepts, and systems of mobile manipulation, both software and hardware. It addresses the topics of kinematics, dynamics, controls, grasping, planning, mapping, dealing with uncertainty, and human-robot interaction.", "spring", "artificial intelligence", "", "", "", "4"], ["CS 6783", "Machine Learning Theory", "This course on machine learning theory introduces basic results, tools, and techniques used in analysis of statistical and online learning algorithms. The course also introduces the basics of computational learning theory.__", "spring", "artificial intelligence", "cs 4780,cs 4786,cs 6780", "", "Advanced Topics in Machine Learning", "4"], ["CS 6850", "The Structure of Information Networks", "Information networks such as the World Wide Web are characterized by the interplay between heterogeneous content and a complex underlying link structure. This course covers recent research on algorithms for analyzing such networks and models that abstract their basic properties. Topics include combinatorial and probabilistic techniques for link analysis, centralized and decentralized search algorithms, generative models for networks, and connections with work in the areas of social networks and citation analysis.", "spring", "networks", "cs 4820", "", "", "4"], ["CS 6861", "Introduction to Kleene Algebra", "Kleene algebra is the algebra of regular expressions and finite automata, structures of fundamental importance in computer science. Kleene algebra is the algebraic theory of these objects, although it has many other natural and useful interpretations: relational algebra, programming language semantics, program logics, automata and formal languages, network programming, computational geometry, and the design and analysis of algorithms. In this course we will explore the theory and applications of this system, including models, deductive systems, completeness and complexity results, and applications in the areas mentioned above. A final paper or project will be due on which the course grade will be based. It will be either an independent study with final paper and presentation, or a software project and presentation, at the students' choice.", "spring", "scientific computing", "cs 6860", "", "Scientific Computing Applications", "4"], ["CS 7090", "Computer Science Colloquium", "Weekly meeting for the discussion and study of important topics in the field.", "fall,spring", "general", "", "", "", "1"], ["CS 7190", "Seminar in Programming Languages", "The Programming Languages Discussion Group meets weekly to discuss papers in the area of programming languages, program analysis, and compilers. The goal is to encourage interactions and discussions between students, researchers, and faculty with interests in this area. The seminar is open to everybody interested in languages and compilers. First-year and second-year students are especially encouraged to participate.", "fall,spring", "general", "cs 6110", "", "", "1"], ["CS 7290", "Seminar on Scientific Computing and Numerics", "Talks on various methods in scientific computing, the analysis of their convergence properties and computational efficiency, and their adaptation to specific applications.", "fall,spring", "general", "", "", "", "1"], ["CS 7490", "Systems Research Seminar", "The Systems Research Seminar discusses recent, interesting papers in the systems area, broadly defined to span operating systems, distributed systems, networking, architecture, databases, security, and programming languages. The goal is to foster technical discussions among the Cornell systems research community.", "fall,spring", "general", "", "", "", "1"], ["CS 7493", "Computer Security Seminar", "This is a graduate seminar primarily aimed at Ph.D. students. Students will read, present, and discuss recent and classic papers in the computer security area. Outside speakers will also be invited to present current research.", "fall,spring", "cryptography", "cs 4410", "", "", "1"], ["CS 7690", "Computer Graphics Seminar", "The Graphics/Vision Research Seminar discusses recent research in the areas of computer graphics and computer vision. The goal is to foster technical discussions and collaboration among the Cornell graphics and vision research community.", "spring", "computer graphics", "", "", "", "1"], ["CS 7790", "Seminar in Artificial Intelligence", "The AI seminar will meet weekly for lectures by graduate students, faculty, and researchers emphasizing work-in-progress and recent results in AI research.", "fall,spring", "artificial intelligence", "", "", "", "1"], ["CS 7794", "Seminar in Natural Language Understanding", "This course, the NLP seminar, is a weekly meeting for people currently or soon to be actively doing research in NLP. (Students simply looking to learn more about NLP should not enroll, but should take one of our lecture courses instead.) One participant leads discussion each week, either of a recently published paper or of their own work in progress. Attendance at all sessions is mandatory.", "fall,spring", "artificial intelligence", "", "", "", "1"], ["CS 7796", "Robotics Seminar", "Informal seminar in which current topics in robotics are discussed.", "fall,spring", "artificial intelligence", "", "", "", "1"], ["CS 7890", "Seminar in Theory of Algorithms and Computing", "", "fall,spring", "general", "", "", "", "1"], ["CS 7893", "Cryptography Seminar", "Seminar for discussing recent or classical papers in cryptography.", "fall,spring", "cryptography", "", "", "", "1"], ["CS 7999", "Independent Research", "Independent research for CS PhD students who have not yet passed their A-exam.", "fall,spring", "general", "", "", "", "1"], ["CS 9999", "Thesis Research", "Doctoral research.", "fall,spring", "general", "", "", "", "1"]]